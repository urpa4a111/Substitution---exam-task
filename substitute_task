# Изпит по "Основи на програмирането"
# Задача 6. Смени
# Любимият отбор на Пепи е на финал, но започва да губи мача. Треньорът на отбора не знае какви смени да направи, за да обърне резултата.
# Напишете програма, с която ще разберете кой са първите 6 валидни смени, които могат да се направят.
# Знаем, че всяка цифра от двата номера е в даден интервал:
# •	Първата цифра на първото число е в интервала от цифрата K до 8, включително.
# •	Втората цифра на първото число е в интервала от 9 до L, включително.
# •	Първата цифра на второто число е в интервала от цифрата M до 8, включително.
# •	Втората цифра на второто число е в интервала от 9 до N, включително.
# За да бъде възможна една смяна, първата цифра на всеки от номерата трябва да бъде четна, а втората -  нечетна.
# За да бъде валидна една смяна, то номерата НЕ трябва да съвпадат.
# Вход:
# От конзолата се четат 4 реда:
# •	K – цяло число в интервала [0..8]
# •	L – цяло число в интервала [0..9]
# •	M– цяло число в интервала [0..8]
# •	N – цяло число в интервала [0..9]
# Изход:
# На конзолата да се отпечатат първите 6 валидни смени по следния начин:
# •	Ако смяната е възможна и номерата НЕ съвпадат, тя Е валидна и трябва да се отпечата:
# "{K}{L} - {M}{N}"
# •	Ако смяната е възможна, но номерата съвпадат, тя НЕ е валидна и трябва да се отпечата:
# "Cannot change the same player."
# Решение:

#въвеждане на липсващите диапазони:
k = int(input())
l = int(input())
m = int(input())
n = int(input())
#дефиниране на суматорите за двете числа
first_of_number = 0
second_of_number = 0

counter_of_substituions = 0 #Брояч на смените, които ще бъдат направени
limited_substitutions = False

for first_number in range (k, 8+1):
    if first_number %2 == 0: #проверка за първото число, дали е четно на първият номер
        for second_number in range (9, l-1, -1): #ако е четно, продължаваме с проверките
            if second_number %2 != 0: #проверка за второто число, дали е нечетно на първият номер
                first_of_number = str(f"{first_number}{second_number}") #превръщаме номерът в стринг удобен за печат
                # Ако първият номер отговаря на проверките по условие,
                # продължаваме проверката за вторият номер
                for third_number in range(m, 8 + 1):
                    #втора проверка за излизане от цикъла, когато е достигнат лимитът на смените
                    if limited_substitutions:
                        break
                    if third_number % 2 == 0:#проверка за първото число, дали е четно на вторият номер
                        for fourth_number in range(9, n-1, -1):
                            if fourth_number %2 != 0:#проверка за второто число, дали е нечетно на вторият номер
                                second_of_number = str(f"{third_number}{fourth_number}")#превръщаме номерът в стринг удобен за печат
                                if second_of_number != first_of_number: #проверка за НЕравенство на номерата
                                    print(f"{first_of_number} - {second_of_number}")
                                    counter_of_substituions += 1 #При преминаване на всички проверки за валидност по условие, увеличаваме брочът на смените
                                    if counter_of_substituions >= 6: # проверка за достигнат лимит за смените и излизане от цикъла
                                        limited_substitutions = True
                                        break
                                else:
                                    print("Cannot change the same player.") #при равенство на номерата, печатаме, че не можем да направим смяна с еднаквите номера



#Code by: Ivaylo Ivanov



